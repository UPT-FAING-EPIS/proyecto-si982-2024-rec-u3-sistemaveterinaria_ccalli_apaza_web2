@model List<Animalia.Models.Producto>
@{
    ViewData["Title"] = "Gestión de Productos";
    var productos = Model;
}

<div class="container mt-4">
    <div class="title-section mb-3">
        <h2>Gestión de Productos</h2>
    </div>

    <div class="row-content">
        <div class="col-md-3 sidebar">
            <h3>Acciones</h3>
            <ul>
                <li><a href="#" onclick="mostrarListar()">Listar Productos</a></li>
                <li><a href="#" onclick="mostrarAgregar()">Agregar Producto</a></li>
            </ul>
        </div>

        <div class="col-md-9 content-area">
            <div class="form-wrapper">
                <!-- Lista de Productos -->
                <div id="listar-form" class="form-container gap-2">
                    <h4>Lista de Productos</h4>
                    <form asp-action="Index" asp-controller="Producto" method="get">
                        <div class="mb-3">
                            <input type="text" class="form-control" name="searchString" placeholder="Buscar por nombre o categoría" value="@ViewData["CurrentFilter"]" />
                        </div>
                        <div class="mb-3 text-end">
                            <button type="submit" class="btn btn-primary">Buscar</button>
                        </div>
                    </form>

                    @if (productos != null && productos.Any())
                    {
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Nombre</th>
                                    <th>Categoría</th>
                                    <th>Stock</th>
                                    <th>Precio</th>
                                    <th>Estado</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var producto in productos)
                                {
                                    <tr>
                                        <td>@producto.Nombre</td>
                                        <td>@producto.Categoria</td>
                                        <td>@producto.Stock</td>
                                        <td>@producto.Precio.ToString("C")</td>
                                        <td>
                                            @if (producto.Stock > 5)
                                            {
                                                <span class="estado-check">✔️</span>
                                            }
                                            else
                                            {
                                                <span class="estado-warning">⚠️</span>
                                            }
                                        </td>
                                        <td>
                                            <button onclick="eliminarProducto(@producto.IdProducto)" class="btn btn-danger">Eliminar</button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <p>No hay productos registrados.</p>
                    }
                </div>

                <!-- Formulario para Agregar Producto -->
                <div id="agregar-form" class="form-container gap-2" style="display: none;">
                    <h4>Agregar Nuevo Producto</h4>
                    <form id="form-agregar" onsubmit="agregarProducto(event)">
                        <div class="mb-3">
                            <input type="text" name="Nombre" placeholder="Nombre" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" name="Categoria" placeholder="Categoría" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <input type="number" name="Stock" placeholder="Stock" class="form-control" required>
                        </div>
                        <div class="mb-3">
                            <!-- Se usa input type number con step para aceptar decimales -->
                            <input type="number" step="0.01" name="Precio" placeholder="Precio" class="form-control" required>
                        </div>
                        <div class="button-group text-end">
                            <button type="button" class="btn btn-secondary" onclick="mostrarListar()">Cancelar</button>
                            <button type="submit" class="btn btn-primary">Agregar</button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

<style>
    .row-content {
        display: flex;
        gap: 20px;
    }

    .title-section {
        display: flex;
        background-color: #65a8c2;
        padding: 15px;
        text-align: center;
        color: white;
        font-size: 1.5rem;
        font-weight: bold;
    }

    .sidebar {
        display: flex;
        background-color: #b5d6cb;
        padding: 20px;
        flex-direction: column;
    }

        .sidebar h3 {
            font-size: 1.2rem;
            color: black;
        }

        .sidebar ul {
            list-style: none;
            padding: 0;
        }

            .sidebar ul li {
                margin: 10px 0;
            }

                .sidebar ul li a {
                    text-decoration: none;
                    color: #002147;
                    font-weight: bold;
                    cursor: pointer;
                }

    .content-area {
        display: flex;
        background-color: #b5d6cb;
        padding: 30px;
    }

    .form-wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .form-container {
        width: 100%;
        max-width: 600px;
        margin-top: 20px;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid gray;
    }

    .button-group {
        margin-top: 15px;
    }

    .btn-primary {
        background-color: #65a8c2;
        border: none;
        padding: 10px 15px;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        padding: 10px 15px;
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
        padding: 10px 15px;
    }

    .estado-check {
        color: green;
    }

    .estado-warning {
        color: orange;
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        mostrarListar(); // Muestra la lista de productos al cargar la página
    });

    function mostrarListar() {
        document.getElementById('listar-form').style.display = 'block';
        document.getElementById('agregar-form').style.display = 'none';
    }

    function mostrarAgregar() {
        document.getElementById('listar-form').style.display = 'none';
        document.getElementById('agregar-form').style.display = 'block';
    }

    function eliminarProducto(id) {
        if (confirm('¿Estás seguro de eliminar este producto?')) {
            fetch('@Url.Action("Delete", "Producto")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                },
                body: new URLSearchParams({ id: id })
            })
            .then(response => {
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert("No se pudo eliminar el producto.");
                }
            });
        }
    }

    function agregarProducto(e) {
        e.preventDefault();
        const form = document.getElementById('form-agregar');
        const formData = new FormData(form);

        // Obtener el valor del precio y reemplazar el punto por coma (para que coincida con la cultura esperada)
        let precio = formData.get('Precio').toString();
        precio = precio.replace('.', ',');
        formData.set('Precio', precio);

        // Convertir FormData a URLSearchParams para enviarlo como x-www-form-urlencoded
        const params = new URLSearchParams();
        formData.forEach((value, key) => {
            params.append(key, value);
        });

        fetch('@Url.Action("Create", "Producto")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: params
        })
        .then(response => response.text())
        .then(data => {
            window.location.reload();
        });
    }
</script>
